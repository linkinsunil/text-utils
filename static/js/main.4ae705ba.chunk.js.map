{"version":3,"sources":["components/NavBar/NavBar.js","components/Alert/Alert.js","components/TextForm/TextForm.js","components/About/AboutUs.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","mode","to","title","type","id","home","about","onClick","toggleMode","role","htmlFor","defaultProps","Alert","word","style","height","alert","charAt","toUpperCase","slice","msg","TextForm","useState","text","setText","color","formName","backgroundColor","border","placeholder","value","onChange","e","target","rows","disabled","length","convertedText","showAlert","toLowerCase","newText","split","join","navigator","clipboard","writeText","filter","el","toFixed","AboutUs","href","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ae705ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst NavBar = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                            </li>\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                        <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input mx-3\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className={`form-check-label text-${props.mode==='dark'?'light':'dark'}`} htmlFor=\"flexSwitchCheckDefault\">{`${props.mode==='dark'?'light':'dark'} mode`}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavBar.propTypes = {\r\n    title: PropTypes.string.isRequired, \r\n    home: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\nNavBar.defaultProps = {\r\n    title: \"Set Title Here\",\r\n    home: \"Home\",\r\n    about: \"About\"\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const capitalizeFirstLetter = (word) => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1) \r\n    }\r\n    return (\r\n        <div style={{height: \"50px\"}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalizeFirstLetter(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\n\r\nconst TextForm = (props) => {\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const handleUpChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n    const handleUpClick = () => {\r\n        let convertedText = text.toUpperCase();\r\n        setText(convertedText)\r\n        text ? props.showAlert(\"Text converted to uppercase successfully\", \"success\") : props.showAlert(\"Enter some text first\", \"warning\")\r\n    }\r\n    const handleLwClick = () => {\r\n        let convertedText = text.toLowerCase();\r\n        setText(convertedText)\r\n        text ? props.showAlert(\"Text converted to lowercase successfully\", \"success\") : props.showAlert(\"Enter some text first\", \"warning\")\r\n    }\r\n    const handleClearClick = () => {\r\n        setText(\"\")\r\n        text ? props.showAlert(\"Text cleared successfully\", \"success\") : props.showAlert(\"Enter some text first\", \"warning\")\r\n    }\r\n    const handleRemoveExtraSpaceClick = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        text ? props.showAlert(\"Extra spaces removed successfully\", \"success\") :props.showAlert(\"Enter some text first\", \"warning\")\r\n    }\r\n    const handleCopyClick = () => {\r\n        navigator.clipboard.writeText(text)\r\n        text ? props.showAlert(\"Text copied successfully\", \"success\") : props.showAlert(\"Enter some text first\", \"warning\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2 className=\"mb-3 mt-3\">{props.formName}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'#495057':'white', color:props.mode==='light'?'black':'white', border:props.mode==='light'?'1px solid #ced4da':'1px solid #495057' }} id=\"myBox\" placeholder=\"Enter text here...\" value={text} onChange={handleUpChange} rows=\"6\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLwClick}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleRemoveExtraSpaceClick}>Remove Extra Spaces</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopyClick}>Copy</button>\r\n            <div className=\"my-3\">\r\n                {text.length > 0 ? <h4>Your Text Summary</h4> : \"\"}\r\n                {text.length > 0 ? <p className=\"small\">{text.split(/\\s+/).filter((el) => el.length !== 0).length} Words and {text.length} Characters</p> : \"\"}\r\n                {text.length > 0 ? <p className=\"small\">{(0.008 * text.split(' ').filter((el) => el.length !== 0).length).toFixed(2)} Minutes Read</p> : \"\"}\r\n                {text.length > 0 ? <h4>Preview</h4> : \"\"}\r\n                {text.length > 0 ? <h6>{text}</h6> : \"\"}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextForm\r\n","import React from 'react'\r\n\r\nconst AboutUs = (props) => {\r\n    const style = {\r\n        color: props.mode === 'dark' ? 'white' : '#042743',\r\n        backgroundColor: props.mode === 'dark' ? 'rgb(36 74 104)' : 'white'\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2 className=\"my-3\" style={{color:props.mode === 'dark' ? 'white' : '#042743'}}>About TextUtils</h2>\r\n        <div className=\"accordion\" id=\"accordion\">\r\n            <div className=\"accordion-item\" style={style}>\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" style={style} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        <strong>Made by Sunil Vishwakarma (<a href=\"https://www.linkedin.com/in/linkinsunil/\">linkinsunil</a>)</strong> \r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This project is a follow-up of a youtube react tutorial.</strong> This project is one of many projects in ReactJS and Vanilla JavaScript / ES6 which is hosted on my <a href=\"https://www.github.com/linkinsunil\">github profile</a>. Check them out now. If you like my profile and repos, you can follow me to get back to them anytime.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={style}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={style} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        <strong>Free To Use</strong> \r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is a multipurpose text utility application.</strong> You can format your text via TextUtils app and can convert your text to upper case, lower case, copy it, remove extra space between text, clear the text box, find reading time of text entered, find total words or characters in the text and can see the preview of the entered text.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={style}>\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" style={style} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        <strong>Other projects by Sunil Vishwakarma</strong> \r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <p>Other projects by Sunil Vishwakarma are hosted on <a href=\"https://www.github.com/linkinsunil\">github profile</a></p>\r\n                        <p>Some of them are:</p>\r\n                        <ul>\r\n                            <li><a href=\"https://linkinsunil.github.io/#/\">Portfolio</a></li>\r\n                            <li><a href=\"https://linkinsunil.github.io/flashtype/\">FlashType</a></li>\r\n                            <li><a href=\"https://linkinsunil.github.io/namely/\">Namely</a></li>\r\n                            <li><a href=\"https://linkinsunil.github.io/linkin-news/\">Linkin News</a></li>\r\n                            <li><a href=\"https://linkinsunil.github.io/calculator/\">Calculator</a></li>\r\n                            <li><a href=\"https://linkinsunil.github.io/pokedex/\">Pokedex</a></li>\r\n                            <li><a href=\"https://linkinsunil.github.io/flexbox-visual-guide/\">FlexBox Visual Guide</a></li>\r\n                            <li><a href=\"https://lessuglyui.netlify.app/\">LessUglyUI</a></li>\r\n                            <li><a href=\"https://www.github.com/linkinsunil\">Github Readme</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AboutUs\r\n","import './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport Alert from './components/Alert/Alert';\nimport TextForm from './components/TextForm/TextForm';\nimport AboutUs from './components/About/AboutUs';\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if(mode===\"dark\"){\n      setMode(\"light\")\n      document.body.style.backgroundColor=\"white\"\n      showAlert(\"Light mode enabled successfully\", \"success\")\n    } else {\n      setMode(\"dark\")\n      document.body.style.backgroundColor=\"#071c30\"\n      showAlert(\"Dark mode enabled successfully\", \"success\")\n    }\n  }\n\n  return (\n    <Router>\n      <div>\n        <NavBar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/text-utils\">\n              <TextForm formName=\"Enter text below to analyze\" mode={mode} showAlert={showAlert} />\n            </Route>\n            <Route exact path=\"/about\">\n              <AboutUs mode={mode} />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}